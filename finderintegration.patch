Index: administrator/components/com_categories/models/category.php
===================================================================
--- administrator/components/com_categories/models/category.php	(revision 22133)
+++ administrator/components/com_categories/models/category.php	(working copy)
@@ -329,8 +329,9 @@
 		$pk			= (!empty($data['id'])) ? $data['id'] : (int)$this->getState($this->getName().'.id');
 		$isNew		= true;
 
-		// Include the content plugins for the on save events.
+		// Include the content and finder plugins for the on save events.
 		JPluginHelper::importPlugin('content');
+		JPluginHelper::importPlugin('finder');
 
 		// Load the row if saving an existing category.
 		if ($pk > 0) {
@@ -405,6 +406,32 @@
 	}
 
 	/**
+	 * Method to change the published state of one or more records.
+	 *
+	 * @param   array    $pks    A list of the primary keys to change.
+	 * @param   integer  $value  The value of the published state.
+	 *
+	 * @return  boolean  True on success.
+	 *
+	 * @since   2.5
+	 */
+	function publish(&$pks, $value = 1)
+	{
+		if (parent::publish($pks, $value))
+		{
+			// Initialise variables.
+			$dispatcher	= JDispatcher::getInstance();
+
+			// Include the content and finder plugins for the change of category state event.
+			JPluginHelper::importPlugin('content');
+			JPluginHelper::importPlugin('finder');
+
+			// Trigger the onCategoryChangeState event.
+			$dispatcher->trigger('onCategoryChangeState', array($this->option.'.'.$this->name, $pks, $value));
+		}
+	}
+
+	/**
 	 * Method rebuild the entire nested set tree.
 	 *
 	 * @return	boolean	False on failure or error, true otherwise.
Index: libraries/joomla/application/component/modeladmin.php
===================================================================
--- libraries/joomla/application/component/modeladmin.php	(revision 22133)
+++ libraries/joomla/application/component/modeladmin.php	(working copy)
@@ -510,8 +510,9 @@
 		$pks		= (array) $pks;
 		$table		= $this->getTable();
 
-		// Include the content plugins for the on delete events.
+		// Include the content and finder plugins for the on delete events.
 		JPluginHelper::importPlugin('content');
+		JPluginHelper::importPlugin('finder');
 
 		// Iterate the items to delete each one.
 		foreach ($pks as $i => $pk) {
@@ -698,8 +699,9 @@
 		$table		= $this->getTable();
 		$pks		= (array) $pks;
 
-		// Include the content plugins for the change of state event.
+		// Include the content and finder plugins for the change of state event.
 		JPluginHelper::importPlugin('content');
+		JPluginHelper::importPlugin('finder');
 
 		// Access checks.
 		foreach ($pks as $i => $pk) {
@@ -819,8 +821,9 @@
 		$pk			= (!empty($data[$key])) ? $data[$key] : (int)$this->getState($this->getName().'.id');
 		$isNew		= true;
 
-		// Include the content plugins for the on save events.
+		// Include the content and finder plugins for the on save events.
 		JPluginHelper::importPlugin('content');
+		JPluginHelper::importPlugin('finder');
 
 		// Allow an exception to be thrown.
 		try
Index: plugins/content/emailcloak/emailcloak.php
===================================================================
--- plugins/content/emailcloak/emailcloak.php	(revision 22133)
+++ plugins/content/emailcloak/emailcloak.php	(working copy)
@@ -29,6 +29,11 @@
 	 */
 	public function onContentPrepare($context, &$row, &$params, $page = 0)
 	{
+		// Don't run this plugin when the content is being indexed
+		if ($context == 'com_finder.indexer') {
+			return true;
+		}
+
 		if (is_object($row)) {
 			return $this->_cloak($row->text, $params);
 		}
Index: plugins/content/loadmodule/loadmodule.php
===================================================================
--- plugins/content/loadmodule/loadmodule.php	(revision 22133)
+++ plugins/content/loadmodule/loadmodule.php	(working copy)
@@ -26,6 +26,11 @@
 	 */
 	public function onContentPrepare($context, &$article, &$params, $page = 0)
 	{
+		// Don't run this plugin when the content is being indexed
+		if ($context == 'com_finder.indexer') {
+			return true;
+		}
+
 		// simple performance check to determine whether bot should process further
 		if (strpos($article->text, 'loadposition') === false && strpos($article->text, 'loadmodule') === false) {
 			return true;
